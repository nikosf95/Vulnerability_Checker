#This is a script that downloads the .csv file which contains the vulnerabilities from the official exploit db repo in github and searches the vuls in it

import csv,re,os,subprocess
import datetime
import logging

pathtospiders = os.path.abspath(os.getcwd()) + "/web_scraping/spiders"
pathtorapid7 = os.path.abspath(os.getcwd()) + "/web_scraping/spiders/rapid7.csv"
pathtoexploits = os.path.abspath(os.getcwd()) + "/web_scraping/spiders/files_exploits.csv"
pathtolog = os.path.abspath(os.getcwd()) + "/web_scraping/spiders/agent.log"

subprocess.call("wget https://raw.githubusercontent.com/offensive-security/exploitdb/master/files_exploits.csv", shell=True, cwd=pathtospiders)
packages = os.popen("dpkg -l | grep '^ii' | awk '{print $2}'").read().split('\n')   #get the packages' name using dpkg
versions = os.popen("dpkg -l | grep '^ii' | awk '{print $3}'").read().split('\n')   #get the packages' version
kernel_version= os.popen('uname -r').read() #get the linux kernel version
kernel_version=('linux kernel' + ' '+kernel_version[:6]) #keep only the version of linux kernel

try:
   
    for i,j in zip(packages,versions):
        j=j[:3]
        
        results=(i+" "+(re.sub(r'([^\w\s]|_)+(?=\s|$)', '', j))) #package + version
       
        with open(pathtoexploits) as f_obj:
            reader = csv.reader(f_obj, delimiter=',')
    
            for line in reader:      #Iterates through the rows files_exploits.csv

                if kernel_version in line[2]: #search for the linux kernel vulnerability into the.csv file
                    logging.basicConfig(filename=pathtolog, filemode='w', format='%(name)s - %(levelname)s - %(message)s')
                    logging.warning('There is a vulnerability in the current kernel version')

                if (results in line[2])  and (results != ' '):      #If the string you want to search is in the row
                    logging.basicConfig(filename=pathtolog, filemode='w', format='%(name)s - %(levelname)s - %(message)s')
                  
                    logging.warning('Description:' + ' ' + line[2])
                    #logging.warning('ID:' + ' ' + line[0])
        with open(pathtorapid7) as f_obj:
            reader = csv.reader(f_obj, delimiter=',')
    
            for line in reader:      #Iterates through the rows of your csv

                if kernel_version in line[0]: #search for the linux kernel vulnerability into the.csv file
                    logging.basicConfig(filename=pathtolog, filemode='w', format='%(name)s - %(levelname)s - %(message)s')
                    logging.warning('There is a vulnerability in the current kernel version')

                if results in line[0] and ('Huawei' not in line[0]) and ('OS X' not in line[0]) and ('IBM' not in line[0]) and ('Sun' not in line[0]) and ('ELSA' not in line[0]) and ('Apple' not in line[0]) and ('Oracle' not in line[0]) and ('Gentoo' not in line[0]) and (('Amazon' not in line[0]) and ('Alpine' not in line[0]) and ('RHSA' not in line[0]) and  ('AIX' not in line[0]) and ('Moodle' not in line[0]) and ('USN' not in line[0]) and ('DSA' not in line[0]) and ('HP' not in line[0])):       

                    logging.basicConfig(filename=pathtolog, filemode='w', format='%(name)s - %(levelname)s - %(message)s')
          
            
                    logging.warning('Description:' + ' ' + line[0])

except KeyboardInterrupt:
    pass


	

        
