import pandas as pd
import numpy as np
import matplotlib.pyplot as plt; plt.rcdefaults()
import matplotlib
import matplotlib.pyplot as plt
from pylab import title, figure, xlabel, ylabel, xticks, bar, legend, axis, savefig
from fpdf import FPDF
import os,csv
import gi
gi.require_version("Notify", "0.7")
from gi.repository import Notify


pathtospiders = os.path.abspath(os.getcwd()) + "/web_scraping/web_scraping/spiders"

pathtowebscraping = os.path.abspath(os.getcwd()) + "/web_scraping"

pathtorapid7 = os.path.abspath(os.getcwd()) + "/web_scraping/web_scraping/spiders/rapid7.csv"

pathtocveno = os.path.abspath(os.getcwd()) + "/web_scraping/web_scraping/spiders/cve_no.csv"

pathtodetails = os.path.abspath(os.getcwd()) + "/web_scraping/spiders/details.csv"

pathtolog = os.path.abspath(os.getcwd()) + "/web_scraping/spiders/agent.log"

bo=0
rc=0
csrf=0
dos=0
pe=0
ce=0
low=0
medium=0
high=0

location = pathtowebscraping
for filename in os.listdir(location):
 
   f  = open(os.path.join(pathtolog), "r")
   for vuln in f:
       if 'Buffer Overflow' in vuln:
           bo += 1
       elif 'Code Execution' in vuln:
           ce +=1
       elif 'Denial of Service ' in vuln:
           dos +=1
       elif 'Privilege Escalation' in vuln:
           pe +=1
       elif 'Cross-Site Scripting' in vuln:
           csrf +=1
       elif 'Race Condition' in vuln:
           rc +=1

#################################




with open(pathtodetails) as f_obj:
    reader = csv.reader(f_obj, delimiter=',')
    for line in reader:
       
        if line[0] != 'score':
           
            if float(line[0])<=3.9:
                low +=1
            elif float(line[0])>3.9 and float(line[0])<=6.9:
                medium +=1
            elif float(line[0])>=7.0:
                high +=1

######################################
objects = ('Low', 'Medium', 'High')
y_pos = np.arange(len(objects))
performance = [low,medium,high]

plt.bar(y_pos, performance, align='center', color=['green', 'orange', 'red'], width=0.4)
plt.xticks(y_pos, objects)
plt.ylabel('cvss score')
plt.title('VUlnerabilities CVSS Score')


plt.savefig('cvss_scores.png')
plt.close()



# Data to plot
labels = 'Buffer Overflows', 'Code Execution', 'Csrf', 'Dos'
sizes = [bo, ce, csrf, dos]
colors = ['gold', 'yellowgreen', 'lightcoral', 'lightskyblue']
explode = (0, 0, 0, 0)  # explode 1st slice

# Plot
plt.pie(sizes, explode=explode, labels=labels, colors=colors,
autopct='%1.1f%%', shadow=True, startangle=140)

plt.axis('equal')
plt.savefig('categories.png')
plt.close()

pdf = FPDF()
pdf.add_page()
pdf.set_xy(0, 0)
pdf.set_font('arial', 'B', 12)
pdf.cell(60)
pdf.cell(90, 10, "Vulnerability assesment", 0, 2, align = 'C')

pdf.cell(-60)
pdf.cell(60, 10, 'In the diagramm below you can see the potential vulnerabilities categorized.', 0, 1, 'L')
pdf.cell(-10)
pdf.cell(40, 10, 'To find out more details you can review the .log file located in /root/kepyes/', 0)
pdf.cell(90, 10, " ", 0, 2)
pdf.cell(-40)
pdf.set_font('arial', '', 12)
pdf.cell(90, 10, " ", 0, 2)
pdf.image('categories.png', x = None, y = None, w = 0, h = 0, type = '', link = '')
pdf.cell(60, 10, 'You can search exploit-db and rapid7 respectively, to search for further details.', 0, 1, 'L')
pdf.cell(-10)
pdf.cell(60, 10, 'CVE numbers are also referred into .log file. You can also search by CVEs in the databases', 0, 1, 'L')
pdf.cell(-10)
pdf.cell(60, 10, 'Please review the vulnerabilitites and update the corresponding packages, if any new versions are available', 0, 1, 'L')



pdf.output('assesment.pdf', 'F')

